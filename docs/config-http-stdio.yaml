# MCP Server Configuration
server:
  name: "MCP Proxy"
  version: "0.1.0"
  transport:
    type: "http"
    http:
      host: ":8080"

  options:
    cache_threshold_bytes: 10000
    pagination_default_page_size: 50
    pagination_max_page_size: 1000

# Middleware Configuration
middleware:
  access_logs:
    excluded_headers:
      - X-Excluded
    redacted_headers:
      - Authorization
      - X-Validated-Jwt

  jwt:
    enabled: true
    validation:
      strategy: "external"  # Values: 'local' or 'external'
      # JWT forwarded by upstream proxy (Istio, etc.)
      # Ref: https://istio.io/latest/docs/reference/config/security/request_authentication/#JWTRule-output_payload_to_header
      forwarded_header: "X-Validated-Jwt"
      local:
        jwks_uri: &JwksUri "https://keycloak.example.com/realms/mcp-servers/protocol/openid-connect/certs"
        cache_interval: "10s"

        # CEL expressions to fine tune allowance. JWT payload is available under object 'payload'
        allow_conditions: []
          #- expression: 'payload.groups.exists(group, group in ["admin", "editor"])'
          #- expression: 'has(payload.email) && payload.email.endsWith("@example.com")'

# Oauth Authorization Server Configuration
# Endpoint: /.well-known/oauth-authorization-server
oauth_authorization_server:
  enabled: true

  # Following path will be attached: /.well-known/openid-configuration
  issuer_uri: "https://keycloak.example.com/realms/mcp-servers"

# Oauth Protected Resource Configuration
# Endpoint: /.well-known/oauth-protected-resource
oauth_protected_resource:
  enabled: true
  resource: "https://mcp-proxy.example.com"
  auth_servers:
    - "https://keycloak.example.com/realms/mcp-servers"
  jwks_uri: *JwksUri
  scopes_supported:
    - openid
    - profile
    - email
    - groups
    - mcp-proxy/custom-audience

  # Optional parameters (currently empty)
  bearer_methods_supported: []
  resource_signing_alg_values_supported: []
  resource_name: ""
  resource_documentation: ""
  resource_policy_uri: ""
  resource_tos_uri: ""
  tls_client_certificate_bound_access_tokens: false
  authorization_details_types_supported: []
  dpop_signing_alg_values_supported: []
  dpop_bound_access_tokens_required: false

# Config related to the MCP behind the proxy
backend:
  transport:
    type: "http"

    stdio:
      command: "/usr/bin/docker"
      args:
        - "run"
        - "-i"
        - "--rm"
        - "-e"
        - "HA_URL"
        - "-e"
        - "HA_TOKEN"
        - "voska/hass-mcp"
      env:
        - "HA_URL=https://home-assistant.example.com"
        - "HA_TOKEN=eyXXX.eyYYY.ZZZ"
